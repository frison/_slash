name: "Publish Image to Dockerhub"
description: "Publish to dockerhub with multiplatform support"

inputs:
  dockerhub-username:
    description: "The dockerhub username to authenticate with and push the image to"
    required: true
  dockerhub-token:
    description: "The dockerhub token to authenticate with and push the image to"
    required: true
  dockerfile:
    description: "The dockerfile to build the image from"
    required: true
  platforms:
    description: "The platforms to build the image for"
    required: true
  build-target:
    description: "The build target to build the image for"
    required: true
runs:
  using: "composite"
  steps:
    # https://github.com/docker/login-action
    -
      name: 🗝 Log into Dockerhub
      uses: docker/login-action@v2
      with:
        username:  ${{ inputs.dockerhub-username }}
        password:  ${{ inputs.dockerhub-token }}

    -
      name: 🤔 Set image and tag prefix variables
      shell: bash
      run: |
        # Splits the build target and uses the last part as the tag prefix
        # ie. 'dev/rails-71' -> 'rails-71'
        echo -n "tag_prefix=" >> $GITHUB_ENV
        basename "${{ inputs.build-target }}" >> $GITHUB_ENV

        # Splits the build target and uses everything but the tag prefix as the image name
        # ie. 'dev/rails-71' -> dev'
        echo -n "image=" >> $GITHUB_ENV
        dirname "${{ inputs.build-target }}" >> $GITHUB_ENV

        # The composite dockerfile will be named after the image
        # ie. 'dev/rails-71' -> Docker.composite.dev
        echo "dockerfile=Docker.composite.${{ env.image }}" >> $GITHUB_ENV
        # In multistage builds, images cannot be referenced with stage names that start with a number or contain symbols.
        # So because we can't have
        #   FROM x AS dev/rails-71
        # as a stage name, as a consequence of this when the stage name is generated in the composite dockerfile
        # it will be of the form 'dev_rails-71' instead of 'dev/rails-71'

    # https://github.com/docker/metadata-action
    -
      name: 🐳 Generate Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ inputs.dockerhub-username }}/${{ env.image }}
        tags: |
          # On main: push `[:image directory:]/[:tag directory:]`.
          # Always: push `[:image directory:]/[:tag directory:]-edge`.
          # On tag: push `[:image directory:]/[:tag directory:]-[:tag]`.
          # Always: push `[:image directory:]/[:tag directory:]-[:short_sha (7 chars)]`.
          type=raw,value=${{ env.tag_prefix }},priority=1000,enable={{is_default_branch}}
          type=raw,value=edge,prefix=${{ env.tag_prefix }}-,priority=700
          type=ref,enable=true,priority=600,prefix=${{ env.tag_prefix }}-,suffix=,event=tag
          type=sha,enable=true,priority=100,prefix=${{ env.tag_prefix }}-,suffix=,format=short

    # Add support for more platforms with QEMU (optional)
    # https://github.com/docker/setup-qemu-action
    # This is an architecture emulator that provides near-native speeds for multi-arch builds.
    #
    # The previous method used https://github.com/crazy-max/ghaction-docker-buildx
    # which is now split between the below two actions.
    -
      name: 🛠 Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: ${{ inputs.platforms }}

    -
      name: 🛠 Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        platforms: ${{ inputs.platforms }}

    -
      name: 🔨 Generate dockerfile
      shell: bash
      run: |
        make composite-dockerfile

    -
      name: 🔨🚀🐳 ${{ inputs.build-target }} (${{ inputs.platforms }})
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ env.dockerfile }}
        platforms: ${{ inputs.platforms }}
        target: ${{ inputs.build-target }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-to: |
          type=gha
        cache-from: |
          type=gha,mode=max
          type=registry,ref=${{ inputs.dockerhub-username }}/${{ env.image }}:${{ env.tag_prefix }},mode=max

